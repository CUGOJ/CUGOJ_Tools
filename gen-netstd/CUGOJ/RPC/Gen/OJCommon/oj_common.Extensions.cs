/**
 * <auto-generated>
 * Autogenerated by Thrift Compiler (0.16.0)
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 * </auto-generated>
 */
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.IO;
using System.Linq;
using System.Threading;
using System.Threading.Tasks;
using Microsoft.Extensions.Logging;
using Thrift;
using Thrift.Collections;


#nullable disable                // suppress C# 8.0 nullable contexts (we still support earlier versions)
#pragma warning disable IDE0079  // remove unnecessary pragmas
#pragma warning disable IDE1006  // parts of the code use IDL spelling
#pragma warning disable IDE0083  // pattern matching "that is not SomeType" requires net5.0 but we still support earlier versions

namespace CUGOJ.RPC.Gen.OJCommon
{
    public static class oj_commonExtensions
    {
        public static bool Equals(this List<global::CUGOJ.RPC.Gen.OJCommon.CodeLanguage> instance, object that)
        {
            if (!(that is List<global::CUGOJ.RPC.Gen.OJCommon.CodeLanguage> other)) return false;
            if (ReferenceEquals(instance, other)) return true;

            return TCollections.Equals(instance, other);
        }


        public static int GetHashCode(this List<global::CUGOJ.RPC.Gen.OJCommon.CodeLanguage> instance)
        {
            return TCollections.GetHashCode(instance);
        }


        public static List<global::CUGOJ.RPC.Gen.OJCommon.CodeLanguage> DeepCopy(this List<global::CUGOJ.RPC.Gen.OJCommon.CodeLanguage> source)
        {
            if (source == null)
                return null;

            var tmp28 = new List<global::CUGOJ.RPC.Gen.OJCommon.CodeLanguage>(source.Count);
            foreach (var elem in source)
                tmp28.Add(elem);
            return tmp28;
        }


        public static bool Equals(this List<global::CUGOJ.RPC.Gen.OJCommon.OJProblemExample> instance, object that)
        {
            if (!(that is List<global::CUGOJ.RPC.Gen.OJCommon.OJProblemExample> other)) return false;
            if (ReferenceEquals(instance, other)) return true;

            return TCollections.Equals(instance, other);
        }


        public static int GetHashCode(this List<global::CUGOJ.RPC.Gen.OJCommon.OJProblemExample> instance)
        {
            return TCollections.GetHashCode(instance);
        }


        public static List<global::CUGOJ.RPC.Gen.OJCommon.OJProblemExample> DeepCopy(this List<global::CUGOJ.RPC.Gen.OJCommon.OJProblemExample> source)
        {
            if (source == null)
                return null;

            var tmp29 = new List<global::CUGOJ.RPC.Gen.OJCommon.OJProblemExample>(source.Count);
            foreach (var elem in source)
                tmp29.Add((elem != null) ? elem.DeepCopy() : null);
            return tmp29;
        }


    }
}
